@page "/splide"
@using Splide.Blazor.EventArgs

<h1>Default</h1>
<SplideSection @ref="defaultSplideSection" Style="width: 300px;" Attributes="@(new Dictionary<string, object>(){{"aria-label", "Basic Structure Example"}, {"role", "region"}})" Options="@(new Options(){PerPage = 2, PerMove = 1})">
    <SplideSlide>
        <img src="images/javascript-logo.svg" />
    </SplideSlide>
    <SplideSlide>
        <img src="images/logo.svg" />
    </SplideSlide>
    <SplideSlide>
        <img src="images/react-logo.svg" />
    </SplideSlide>
    <SplideSlide>
        <img src="images/svelte-logo.svg" />
    </SplideSlide>
    <SplideSlide>
        <img src="images/typescript-logo.svg" />
    </SplideSlide>
    <SplideSlide>
        <img src="images/vue-logo.svg" />
    </SplideSlide>
</SplideSection>
<button class="btn btn-primary" @onclick="@(async _ => await OnSetOptions())">set perPage = 3</button>

<h1 style="margin-top: 100px;">Thumbnail Carousel</h1>
<SplideSection @ref="primarySplideSection" Style="width: 300px;" Attributes="@(new Dictionary<string, object>(){{"aria-label", "Basic Structure Example"}, {"role", "region"}})" Click="OnClick" Moved="OnMoved" Options="_options">
    <SplideSlide>
        <img src="images/javascript-logo.svg"/>
    </SplideSlide>
    <SplideSlide>
        <img src="images/logo.svg"/>
    </SplideSlide>
    <SplideSlide>
        <img src="images/react-logo.svg"/>
    </SplideSlide>
    <SplideSlide>
        <img src="images/svelte-logo.svg"/>
    </SplideSlide>
    <SplideSlide>
        <img src="images/typescript-logo.svg"/>
    </SplideSlide>
    <SplideSlide>
        <img src="images/vue-logo.svg" />
    </SplideSlide>
</SplideSection>

<SplideSection @ref="secondarySplideSection" Style="width: 300px;" Attributes="@(new Dictionary<string, object>(){{"aria-label", "Basic Structure Example"}, {"role", "region"}})" Options="@(new Options(){AutoMount = false, Gap = "10", Rewind = true, Pagination = false, IsNavigation = true, Breakpoints = new Dictionary<int, object>(){{768, new {PerPage = 1}}}})">
    <SplideSlide>
        <img src="images/javascript-logo.svg" />
    </SplideSlide>
    <SplideSlide>
        <img src="images/logo.svg" />
    </SplideSlide>
    <SplideSlide>
        <img src="images/react-logo.svg" />
    </SplideSlide>
    <SplideSlide>
        <img src="images/svelte-logo.svg" />
    </SplideSlide>
    <SplideSlide>
        <img src="images/typescript-logo.svg" />
    </SplideSlide>
    <SplideSlide>
        <img src="images/vue-logo.svg" />
    </SplideSlide>
</SplideSection>

<button class="btn btn-primary" @onclick="@(async _ => await OnGo("1"))">Go page 1</button>
<button class="btn btn-primary" @onclick="@(async _ => await OnGo("+2"))">Go page +2</button>
<button class="btn btn-primary" @onclick="@(async _ => await OnGo(">"))">Go page ></button>
<button class="btn btn-primary" @onclick="@(async _ => await OnGo(">2"))">Go page >2</button>

@code
{
    SplideSection? defaultSplideSection;
    SplideSection? primarySplideSection;
    SplideSection? secondarySplideSection;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            await primarySplideSection!.Sync(secondarySplideSection!);
        }
    }

    readonly Options _options = new Options()
    {
        Pagination = false,
        Arrows = false,
        AutoMount = false
    };
    private void OnClick(SlideEventArgs args)
    {

    }

    private void OnMoved(MoveEventArgs moveEventArgs)
    {

    }

    private async ValueTask OnGo(string pageCondition)
    {
        await secondarySplideSection!.Go(pageCondition);
    }

    private async ValueTask OnSetOptions()
    {
        await defaultSplideSection!.SetOptions(new Options() { PerPage = 3 });
    }
}
